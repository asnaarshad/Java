import java.util.*;
import java.lang.*;
import java.io.*;

// Before Java 8, interfaces could have only abstract methods. 
// The implementation of these methods has to be provided in a separate class. 
// So, if a new method is to be added in an interface, 
// then its implementation code has to be provided in the class implementing the same 
// interface. To overcome this issue, Java 8 has introduced the concept of default methods 
// which allow the interfaces to have methods
// with implementation without affecting the classes that implement the interface.



 interface TestInterface
{
    public void square (int a);
    static void show()
    {
        System.out.println("Static Method Executed");
    }
}
class TestClass implements TestInterface
{
    public void square (int a)
    {
        System.out.println(a*a);
    }
}
class Main {
    public static void main(String[] args) {
    TestClass d = new TestClass();
        d.square(4);
        TestInterface.show();
    }
}