
package abstraction;
abstract class Employee {
    private String Name;
    private String Address;
    private int Number;

    public Employee(String Name, String Address, int Number) {
        this.Name = Name;
        this.Address = Address;
        this.Number = Number;
    }

    public String getName() {
        return Name;
    }

    public void setName(String Name) {
        this.Name = Name;
    }

    public String getAddress() {
        return Address;
    }

    public void setAddress(String Address) {
        this.Address = Address;
    }

    public int getNumber() {
        return Number;
    }

    public void setNumber(int Number) {
        this.Number = Number;
    }
    
    public double computePay()
    {
        System.out.println("Inside Employee computePay");
        return 0.0;  
    }
    
    public void mailCheck(){
        System.out.println("Mailing a check to " + this.Name +"  "+this.Address);
    }

    @Override
    public String toString()
    {
        return Name+"  "+Address+"  "+Number;
    }

    
}
class Salary extends Employee{

   private double salary;   // Annual salary
   
   public Salary(String name, String address, int number, double salary) {
      super(name, address, number);
      setSalary(salary);
   }
   
   public void mailCheck() {
      System.out.println("Within mailCheck of Salary class ");
      System.out.println("Mailing check to " + getName() + " with salary " + salary);
   }
 
   public double getSalary() {
      return salary;
   }
   
   public void setSalary(double newSalary) {
      if(newSalary >= 0.0) {
         salary = newSalary;
      }
   }
   
   @Override
   public double computePay() {
      System.out.println("Computing salary pay for " + getName());
      return salary/52;
   }
}


public class Abstraction {

    public static void main(String[] args) {


        Salary s = new Salary("Mohd Mohtashim", "Ambehta, UP", 3, 3600.00);
      Employee e = new Salary("John Adams", "Boston, MA", 2, 2400.00);
      System.out.println("Call mailCheck using Salary reference --");
      s.mailCheck();
      System.out.println("\n Call mailCheck using Employee reference--");
      e.mailCheck();
    }
    
}